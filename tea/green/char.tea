[[ stl ]]

// char.tea
//
// MIT License
//
// Copyright (c) 2021 Ferhat GeÃ§doÄŸan All Rights Reserved.
// Distributed under the terms of the MIT License.
//
//

import tea.green.type
import tea.green.string

`set character_ascii = 32
`set character_blank = 0x20
`set character_max   = 0x7E
`set character_zero  = '0'

module ch {
    fn ch#upper(data: char) = char {
        if data >= 'a' && data <= 'z' {
            . data - character_ascii
        } . data
    }

    fn ch#lower(data: char) = char {
        if data >= 'A' && data <= 'Z' {
            . data + character_ascii
        } . data
    }

    fn ch#digit(data: char) = int8 {
        . data - character_zero
    }

    fn ch#is_upper(ch: char) = bool {
        if ch >= 'A' && ch <= 'Z' {
            . true
        } . false
    }

    fn ch#is_lower(ch: char) = bool {
        if ch >= 'a' && ch <= 'z' {
            . true
        } . false
    }

    fn ch#is_alpha(ch: char) = bool {
        if ch#is_upper(ch) || ch#is_lower(ch) {
            . true
        } . false
    }

    fn ch#is_digit(ch: char) = bool {
        if ch >= '0' && ch <= '9' {
            . true
        } . false
    }

    fn ch#is_alpha_num(ch: char) = bool {
        if ch#is_alpha(ch) || ch#is_digit(ch) {
            . true
        } . false
    }

    fn ch#is_blank(ch: char) = bool {
        if ch == character_blank {
            . true
        } . false
    }

    fn ch#is_printable(ch: char) = bool {
        if ch >= character_blank && ch <= character_max {
            . true
        } . false
    }
} // ch