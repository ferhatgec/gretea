[[ stl ]]

// string.tea
//
// MIT License
//
// Copyright (c) 2021 Ferhat Geçdoğan All Rights Reserved.
// Distributed under the terms of the MIT License.
//
//

import tea.green.type
import tea.green.char

module cpp_str {
    fn cpp_str#append(&data: string, what: string) {
        [[ unsafe ]] {
            data.append(what)
        }
    }

    fn cpp_str#append(&data: string, what: string, pos: int64, len: uint64) {
        [[ unsafe ]] {
            data.append(what, pos, len)
        }
    }

    fn cpp_str#append(&data: string, n: int64, ch: char) {
        [[ unsafe ]] {
            data.append(n, ch)
        }
    }

    fn cpp_str#assign(&data: string, what: string) {
        [[ unsafe ]] {
            data.assign(what)
        }
    }

    fn cpp_str#assign(&data: string, what: string, pos: int64, len: uint64) {
        [[ unsafe ]] {
            data.assign(what, pos, len)
        }
    }

    fn cpp_str#assign(&data: string, n: int64, ch: char) {
        [[ unsafe ]] {
            data.assign(n, ch)
        }

    }
}

module str {
    fn str#first(data: string) = char {
        var mut __first: int64 = 0

        for &ch in data {
            . ch
        }

        . (char)__first
    }

    fn str#last(data: string) = char {
        var mut __last: int64 = 0

        for &ch in data {
            [[ unsafe ]] {
                __last = ch
            }
        } . (char)__last
    }

    fn str#append(data: string, what: string) = string {
        cpp_str#append(data, what)

        . data
    }
} // str